services:
  mysql:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=mydatabase'
      - 'MYSQL_ROOT_PASSWORD=123456'
    ports:
      - 3306:3306
    networks:
      - demo-net
  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379
    networks:
      - demo-net

#  zookeeper:
#    image: bitnami/zookeeper:3.8.3
#    container_name: zookeeper
#    hostname: zookeeper
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    networks:
#      - demo-net
#
#  kafka1:
#    image: bitnami/kafka:3.6.0
#    ports:
#      - '9091:9091'
#    networks:
#      - demo-net
#    environment:
#      HOSTNAME: kafka1
#      KAFKA_BROKER_ID: 0
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9091
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9091
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka
#    extra_hosts:
#      kafka1: 172.16.16.4
#
#  kafka2:
#    image: bitnami/kafka:3.6.0
#    ports:
#      - '9092:9092'
#    networks:
#      - demo-net
#    environment:
#      HOSTNAME: kafka2
#      KAFKA_BROKER_ID: 1
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka
#    extra_hosts:
#      kafka2: 172.16.16.4
#
#  kafka3:
#    image: bitnami/kafka:3.6.0
#    ports:
#      - '9093:9093'
#    networks:
#      - demo-net
#    environment:
#      HOSTNAME: kafka3
#      KAFKA_BROKER_ID: 2
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9093
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka
#    extra_hosts:
#      kafka3: 172.16.16.4

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    hostname: kafka
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT



  elasticsearch:
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
#      - ELASTIC_USERNAME=elastic
#      - ELASTIC_PASSWORD=123456
#    volumes:
#      - /docker-volume/elasticsearch-persistence/data:/usr/share/elasticsearch/data
#      - /docker-volume/elasticsearch-persistence/plugins:/usr/share/elasticsearch/plugins
    #        - /docker-volume/elasticsearch-persistence/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - demo-net
    privileged: true
  # token:
  # bin/elasticsearch-create-enrollment-token --scope kibana
  # password:
  # bin/elasticsearch-reset-password -u elastic
  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.12.0
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=123456
    ports:
      - 5601:5601
    networks:
      - demo-net
    depends_on:
      - elasticsearch
    privileged: true

networks:
  demo-net:
    name: demo-net
    driver: bridge

volumes:
  kafka_data:
    driver: local